   # User
    type User {
        id: ID!
        username: String!
        email: String!
        events: [Event!]!
    }

    input CreateUserInput {
        username: String!
        email: String!
    }

    input UpdateUserInput {
        username: String
        email: String
    }
 
    # Event
    type Event {
        id: ID!
        title: String!
        desc: String!
        date: String
        from: String
        to: String
        location_id: ID
        user_id: ID
        locations: Location!
        participants: [Participant!]!
        users: [User!]!
    }

    input CreateEventInput {
        title: String!
        desc: String!
    }

    input UpdateEventInput {
        title: String
        desc: String
    }

    # Location
    type Location{
        id: ID!
        name: String!
        desc: String!
        lat: Float
        lng: Float
    }

    input CreateLocationInput {
        name: String!
        desc: String!
    }

    input UpdateLocationInput {
        name: String
        desc: String
    }

    # Participant
    type Participant {
        id: ID!
        user_id: ID!
        event_id: ID!
    }

    input CreateParticipantInput {
        user_id: ID!
        event_id: ID!
    }

    input UpdateParticipantInput {
        user_id: ID
        event_id: ID
    }

    type DeleteAllOutput {
        count: Int!
      }

    type Query {
        users: [User!]! 
        user(id: ID!): User!

        events: [Event!]!
        event(id: ID!): Event!

        locations: [Location!]!
        location(id: ID!): Location!

        participants: [Participant!]!
        participant(id: ID!): Participant!
    }

    type Mutation {
        # User
        createUser(data: CreateUserInput): User!
        updateUser(id: ID, data: UpdateUserInput): User!
        deleteUser(id: ID): User!
        deleteAllUsers: DeleteAllOutput! 

        # Event 
        createEvent(data: CreateEventInput): Event!
        updateEvent(id: ID, data: UpdateEventInput): Event!
        deleteEvent(id: ID): Event!
        deleteAllEvents: DeleteAllOutput! 


        # Location
        createLocation(data: CreateLocationInput): Location!
        updateLocation(id: ID, data: UpdateLocationInput): Location!
        deleteLocation(id: ID): Location!
        deleteAllLocations: DeleteAllOutput!

        # Participant
        createParticipant(data: CreateParticipantInput): Participant!
        updateParticipant(id: ID, data: UpdateParticipantInput): Participant!
        deleteParticipant(id: ID): Participant!
        deleteAllParticipants: DeleteAllOutput! 
     }

     type Subscription {
        # User
        userCreated: User!
        userUpdated: User!
        userDeleted: User!

        # Event
        eventCreated: Event!
        eventUpdated: Event!
        eventDeleted: Event!

        # Location
        locationCreated: Location!
        locationUpdated: Location!
        locationDeleted: Location!

        participantCreated: Participant!
        participantUpdated: Participant!
        participantDeleted: Participant!
     }